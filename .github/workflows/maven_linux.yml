# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Linux test and SNAPSHOT deploy with Maven

on:
  push:
    branches: [ master, highprecision ]
  pull_request:
    branches: [ master, highprecision ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'zulu'
        cache: maven
    - name: Test and package with Maven
      run: mvn verify

  deploy-to-overture:
    # if: github.event_name == 'push'
    if: ${{ false }}  # disable for now
    needs: build
    runs-on: ubuntu-latest
    steps:
        - name: Checking out  
          uses: actions/checkout@v3

        - name: Getting POM version
          id: get_version
          run: echo "version=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

        - name: Configure deploy for snapshots
          run: echo "SERVER_ID=vdmj.overture.au.dk-snapshots" >> $GITHUB_ENV

        - name: Check variables
          run: |
            echo ${{ env.SERVER_ID }}
            echo ${{ steps.get_version.outputs.version }}

        - name: Set up JDK
          if: contains(${{ steps.get_version.outputs.version }}, 'SNAPSHOT' )
          uses: actions/setup-java@v3
          with:
            java-version: '8'
            distribution: 'zulu'
            cache: maven
            server-id: ${{ env.SERVER_ID }}
            server-username: MAVEN_USERNAME
            server-password: MAVEN_PASSWORD

        - name: Deploy
          if: contains(${{ steps.get_version.outputs.version }}, 'SNAPSHOT' )
          run: mvn -B deploy
          env:
            MAVEN_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
            MAVEN_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

  deploy-to-github:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checking out
        uses: actions/checkout@v3

      - name: Getting POM version
        id: get_version
        run: echo "version=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Set up JDK 8
        if: contains(${{ steps.get_version.outputs.version }}, 'SNAPSHOT' )
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          server-id: github
          cache: maven

      - name: Publish artifacts to GitHub Packages
        if: contains(${{ steps.get_version.outputs.version }}, 'SNAPSHOT' )
        run: mvn --batch-mode deploy -DskipTests -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
